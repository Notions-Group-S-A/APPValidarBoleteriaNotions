name: Android Publish

on:
  workflow_call:
    inputs:
      dotnet-version:
        required: true
        type: string
      dotnet-version-target:
        required: true
        type: string
      xcode-version:
        required: false
        type: string
      project-file:
        required: true
        type: string
      project-folder:
        required: true
        type: string
      build-config:
        required: true
        type: string
      build-version:
        required: true
        type: string
      package-name:
        required: true
        type: string   
      upload-url:
        required: true
        type: string

    secrets:      
      keystore-password:
        required: true
      keystore-alias:
        required: true
      keystore:
        required: true
      playstore-service-account:
        required: false

jobs:
  publish-android:
    runs-on: windows-latest
    name: Android Publish

    steps:
    - name: Checkout the code  
      uses: actions/checkout@v4

    - name: Setup .NET ${{ inputs.dotnet-version }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ inputs.dotnet-version }}
          
    # This step might be obsolete at some point as .NET MAUI workloads 
    # are starting to come pre-installed on the GH Actions build agents.
    - name: Install MAUI Workload
      run: dotnet workload install maui --ignore-failed-sources
  
    - name: Restore Dependencies
      run:  |
        dotnet restore './Notions.ClientServices/Notions.ClientServices.csproj'  --locked-mode
        dotnet restore ${{ inputs.project-file }} --locked-mode
        
    - name: Build Projects
      if: runner.os == 'Windows'
      run: |        
        dotnet build ./Notions.ClientServices/Notions.ClientServices.csproj 
        dotnet build ${{ inputs.project-file }} -c ${{ inputs.build-config }} -f ${{ inputs.dotnet-version-target }}-android34.0  /p:AndroidSigningKeyPass=${{ secrets.keystore-password }} --no-restore    
    
    #- name: Localiza la carpeta .app donde construyo
    #  id: locate_app
    #  run: |
    #    APP_PATH=$(find ${{ github.workspace }}/${{ inputs.project-folder }}/bin/${{ inputs.build-config }}/${{ inputs.dotnet-version-target }}-android34.0/iossimulator-x64/ -name "*.app" | head -n 1)
    #    echo "APP_PATH=$APP_PATH" >> $GITHUB_ENV
         
    # convierte una cadena codificada en base 64 y lo guarda en un archivo
    - name: Decode Keystore
      id: decode_keystore
      uses: timheuer/base64-to-file@v1
      with:
        fileDir: '${{ github.workspace }}/${{ inputs.project-folder }}'
        fileName: 'ourkeystore.jks'
        encodedString: ${{ secrets.keystore }}

    - name: Version the app
      uses: managedcode/MAUIAppVersion@v1
      with: 
        csproj: ${{ inputs.project-file }}
        version: ${{ github.run_number }} # to keep value unique
        displayVersion: ${{ inputs.build-version }}.${{ github.run_number }}
        printFile: true # optional

    - name: Publish MAUI Android APK
      run: dotnet publish ${{inputs.project-file}} -c ${{ inputs.build-config }} -f ${{ inputs.dotnet-version-target }}-android34.0 /p:AndroidPackageFormats=apk /p:AndroidKeyStore=true /p:AndroidSigningKeyStore=ourkeystore.jks /p:AndroidSigningKeyAlias=${{secrets.keystore-alias}} /p:AndroidSigningKeyPass="${{ secrets.keystore-password }}" /p:AndroidSigningStorePass="${{ secrets.keystore-password }}" --no-restore
      
    - name: List the contents of the output directory 1
      run: dir ${{ github.workspace }}/${{ inputs.project-folder }}/bin/${{ inputs.build-config }}

    - name: List the contents of the output directory 2
      run: dir ${{ github.workspace }}/${{ inputs.project-folder }}/bin/${{ inputs.build-config }}/${{ inputs.dotnet-version-target }}-android34.0

    - name: Upload Release Asset-paquete apk
      id: upload-release-asset-apk
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ inputs.upload-url }}
        asset_path: ${{ github.workspace }}/${{ inputs.project-folder }}/bin/${{ inputs.build-config }}/${{ inputs.dotnet-version-target }}-android34.0/APPNotions.apk
        asset_name: ${{ inputs.package-name }}.apk
        asset_content_type: application/octet-stream   

    - name: Publish MAUI Android AAB
      run: dotnet publish ${{inputs.project-file}} -c ${{ inputs.build-config }} -f ${{ inputs.dotnet-version-target }}-android34.0 /p:AndroidPackageFormats=aab /p:AndroidKeyStore=true /p:AndroidSigningKeyStore=ourkeystore.jks /p:AndroidSigningKeyAlias=${{secrets.keystore-alias}} /p:AndroidSigningKeyPass="${{ secrets.keystore-password }}" /p:AndroidSigningStorePass="${{ secrets.keystore-password }}" --no-restore

    - name: Upload Release Asset-paquete aab
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ inputs.upload-url }}
        asset_path: ${{ github.workspace }}/${{ inputs.project-folder }}/bin/${{ inputs.build-config }}/${{ inputs.dotnet-version-target }}-android34.0/APPNotions.aab
        asset_name: ${{ inputs.package-name }}.aab
        asset_content_type: application/octet-stream       
